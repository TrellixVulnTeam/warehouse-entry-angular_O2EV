{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let InMemoryDataService = /*#__PURE__*/(() => {\n  class InMemoryDataService {\n    createDb() {\n      const heroes = [{\n        id: 1,\n        name: 'Chipsy Lays',\n        quantity: 10\n      }, {\n        id: 2,\n        name: 'Coca-cola',\n        quantity: 10\n      }, {\n        id: 3,\n        name: 'Masło Extra',\n        quantity: 10\n      }, {\n        id: 4,\n        name: 'Parówki Sokoliki',\n        quantity: 10\n      }, {\n        id: 5,\n        name: 'Galaretka truskawkowa',\n        quantity: 10\n      }, {\n        id: 6,\n        name: 'Herbata Lipton',\n        quantity: 10\n      }, {\n        id: 7,\n        name: 'Woda Żywiec Zdrój',\n        quantity: 10\n      }, {\n        id: 8,\n        name: 'Lody Koral',\n        quantity: 10\n      }, {\n        id: 9,\n        name: 'Ciastka Czekoladowe',\n        quantity: 10\n      }];\n      return {\n        heroes\n      };\n    } // Overrides the genId method to ensure that a hero always has an id.\n    // If the heroes array is empty,\n    // the method below returns the initial number (11).\n    // if the heroes array is not empty, the method below returns the highest\n    // hero id + 1.\n\n\n    genId(heroes) {\n      return heroes.length > 0 ? Math.max(...heroes.map(hero => hero.id)) + 1 : 11;\n    }\n\n  }\n\n  InMemoryDataService.ɵfac = function InMemoryDataService_Factory(t) {\n    return new (t || InMemoryDataService)();\n  };\n\n  InMemoryDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InMemoryDataService,\n    factory: InMemoryDataService.ɵfac,\n    providedIn: 'root'\n  });\n  return InMemoryDataService;\n})();","map":null,"metadata":{},"sourceType":"module"}